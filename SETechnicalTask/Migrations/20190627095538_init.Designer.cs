// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SETechnicalTask.Migrations
{
    [DbContext(typeof(EmpContext))]
    [Migration("20190627095538_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.EmpSeq", "'EmpSeq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.SkillSeq", "'SkillSeq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SETechnicalTask.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EmpSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SETechnicalTask.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("SkillId");

                    b.Property<int>("EmpId");

                    b.HasKey("SkillId", "EmpId");

                    b.HasIndex("EmpId");

                    b.ToTable("EmployeeSkill");
                });

            modelBuilder.Entity("SETechnicalTask.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "SkillSeq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PHP"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ASP.NET"
                        },
                        new
                        {
                            Id = 3,
                            Name = "iOS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Android"
                        });
                });

            modelBuilder.Entity("SETechnicalTask.Models.EmployeeSkill", b =>
                {
                    b.HasOne("SETechnicalTask.Models.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SETechnicalTask.Models.Skill", "Skill")
                        .WithMany("SkillEmployees")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
